---
- name: disable nodejs module
  hosts: backend
  become: yes
  tasks:
  - name: python libs
    ansible.builtin.pip:
      name: "{{item}}"
      executable: pip3.9
    loop:
      - cryptography
      - PyMySqL

  - name: disable current module
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package: 
      name: "{{item}}"
      state: installed
    loop: 
    - nodejs
    - mysql 

  - name: user add
    ansible.builtin.user:
      name: expense
  
  - name: create directory
    ansible.builtin.file:
      name: /app
      state: directory

  - name: download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzip backend code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
  
  - name: install dependencies
    community.general.npm: 
      path: /app

  - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  # - name: import mysql data
  #   community.mysql.mysql_db:
  #     state: import
  #     name: all
  #     login_user: root
  #     login_password: ExpenseApp@1
  #     login_host: backend.kommanuthala.store
  #     target: /app/schema/backend.sql

  - name: import mysql data
    community.mysql.mysql_db:
      state: import
      name: all
      login_user: root
      login_password: ExpenseApp@1
      login_host: mysql.kommanuthala.store
      target: /app/schema/backend.sql
  
  # - name: realod
  #   ansible.builtin.systemd_service:
  #     enabled: true
  #     start: restarted
  #     daemon_reload: true
  #     name: backend
  
  - name: realod
    ansible.builtin.systemd_service:
      enabled: true
      state : restarted
      daemon_reload: true
      name: backend